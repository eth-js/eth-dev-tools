{"version":3,"sources":["webpack:///./node_modules/bignumber.js/bignumber.js","webpack:///./src/views/Converter.vue?0876","webpack:///./src/views/Converter.vue?71cc","webpack:///src/views/Converter.vue","webpack:///./src/views/Converter.vue?fa82","webpack:///./node_modules/vuetify/lib/components/VLabel/VLabel.js","webpack:///./node_modules/vuetify/lib/components/VLabel/index.js","webpack:///./node_modules/vuetify/lib/components/VMessages/VMessages.js","webpack:///./node_modules/vuetify/lib/components/VMessages/index.js","webpack:///./node_modules/vuetify/lib/mixins/validatable/index.js","webpack:///./node_modules/vuetify/lib/components/VInput/VInput.js","webpack:///./node_modules/vuetify/lib/components/VInput/index.js","webpack:///./node_modules/vuetify/lib/components/VCounter/VCounter.js","webpack:///./node_modules/vuetify/lib/components/VCounter/index.js","webpack:///./node_modules/vuetify/lib/mixins/intersectable/index.js","webpack:///./node_modules/vuetify/lib/components/VProgressLinear/VProgressLinear.js","webpack:///./node_modules/vuetify/lib/components/VProgressLinear/index.js","webpack:///./node_modules/vuetify/lib/mixins/loadable/index.js","webpack:///./node_modules/vuetify/lib/components/VTextField/VTextField.js","webpack:///./src/views/Converter.vue"],"names":["globalObject","BigNumber","isNumeric","mathceil","Math","ceil","mathfloor","floor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","clone","configObject","div","convertBase","parseNumeric","P","prototype","constructor","toString","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","v","b","alphabet","c","caseChanged","e","i","isNum","len","str","x","this","_isBigNumber","s","slice","String","test","charCodeAt","indexOf","replace","search","substring","length","intCheck","round","DEBUG","Error","charAt","toUpperCase","toLowerCase","push","format","n","rm","id","c0","ne","coeffToString","toExponential","toFixedPoint","maxOrMin","args","method","m","call","normalise","j","pop","sd","r","d","k","ni","rd","xc","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","set","obj","p","hasOwnProperty","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","max","arguments","lt","minimum","min","gt","random","pow2_53","random53bitInt","dp","a","rand","Uint32Array","copy","splice","sum","plus","decimal","toBaseOut","baseIn","baseOut","arrL","arr","reverse","sign","callerIsToString","y","pow","concat","multiply","base","temp","xlo","xhi","carry","klo","khi","compare","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","yc","NaN","bitFloor","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","isNaN","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedBy","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","isOdd","mod","times","integerValue","isEqualTo","eq","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","lte","isNegative","isPositive","isZero","minus","t","xLTy","xe","ye","modulo","multipliedBy","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFixed","toFormat","split","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toNumber","toPrecision","toJSON","z","l","name","zs","render","_vm","_h","$createElement","_c","_self","staticClass","_v","attrs","model","value","callback","$$v","wei","expression","gwei","ether","staticRenderFns","factor","computedGet","type","result","computedSet","newValue","oldValue","props","source","data","computed","get","methods","console","log","mixins","extend","functional","absolute","Boolean","color","default","disabled","focused","for","left","Number","right","h","ctx","children","listeners","class","on","style","position","ref","options","setTextColor","Array","tag","map","genMessage","message","key","themeClasses","genChildren","error","errorCount","errorMessages","messages","readonly","rules","success","successMessages","validateOnBlur","required","errorBucket","hasColor","hasFocused","hasInput","isFocused","isResetting","lazyValue","valid","isDark","appIsDark","internalErrorMessages","internalSuccessMessages","validationTarget","hasSuccess","shouldValidate","hasError","genInternalMessages","internalValue","val","$emit","externalError","computedColor","internalMessages","watch","newVal","oldVal","validate","deep","$nextTick","setTimeout","form","register","unregister","isArray","undefined","force","index","rule","baseMixins","inheritAttrs","appendIcon","backgroundColor","dense","height","hideDetails","hint","label","loading","persistentHint","prependIcon","hasMouseDown","hasState","isLabelActive","isDirty","_uid","hasMessages","$slots","$_modelEvent","$options","event","genPrependSlot","genControl","genAppendSlot","genInputSlot","genMessages","genLabel","cb","icon","eventName","validationState","dark","light","listeners$","click","preventDefault","stopPropagation","mouseup","VIcon","setBackgroundColor","onClick","mousedown","onMouseDown","onMouseUp","genDefaultSlot","hasLabel","computedId","hasHint","validations","role","scopedSlots","location","slot","prepend","genIcon","genSlot","append","classes","genContent","parseInt","content","isGreater","intersectable","window","inserted","$el","handler","onObserve","unbind","entries","observer","isIntersecting","onVisible","active","backgroundOpacity","bufferValue","indeterminate","query","rounded","stream","striped","internalLazyValue","backgroundStyle","computedTransition","__cachedBarType","__cachedIndeterminate","__cachedDeterminate","styles","width","normalizedValue","genProgressBar","normalizedBuffer","parseFloat","opacity","$vuetify","rtl","fixed","reactive","normalize","$listeners","change","getBoundingClientRect","offsetX","bottom","top","genListeners","__cachedStream","__cachedBackground","__cachedBuffer","__cachedBar","loaderHeight","progress","dirtyTypes","directives","ripple","appendOuterIcon","autofocus","clearable","clearIcon","counter","filled","flat","fullWidth","outlined","placeholder","prependInnerIcon","shaped","singleLine","solo","soloInverted","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","isSingle","isSolo","isEnclosed","includes","offset","labelValue","setLabelWidth","setPrefixWidth","$attrs","onFocus","setPrependWidth","requestAnimationFrame","$refs","input","blur","focus","genPrependInnerSlot","unshift","clearableCallback","attrs$","maxlength","counterValue","genFieldset","genTextFieldSlot","genClearIcon","genIconSlot","genProgress","genLegend","showLabel","labelPosition","span","domProps","innerHTML","Object","assign","onBlur","onInput","keydown","onKeyDown","genCounter","genAffix","genInput","document","activeElement","target","validity","keyCode","enter","scrollWidth","offsetWidth","component","VTextField"],"mappings":"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","file":"js/about.2ba47cec.js","sourcesContent":[";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.0\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Converter.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Converter.vue?vue&type=style&index=0&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"converter\"},[_c('h1',[_vm._v(\"Unit conversion utility\")]),_c('v-text-field',{attrs:{\"counter\":100,\"label\":\"Wei\",\"data-vv-name\":\"wei\",\"required\":\"\"},model:{value:(_vm.wei),callback:function ($$v) {_vm.wei=$$v},expression:\"wei\"}}),_c('v-text-field',{attrs:{\"counter\":100,\"label\":\"Gwei\",\"data-vv-name\":\"gwei\",\"required\":\"\"},model:{value:(_vm.gwei),callback:function ($$v) {_vm.gwei=$$v},expression:\"gwei\"}}),_c('v-text-field',{attrs:{\"counter\":100,\"label\":\"Ether\",\"data-vv-name\":\"ether\",\"required\":\"\"},model:{value:(_vm.ether),callback:function ($$v) {_vm.ether=$$v},expression:\"ether\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"converter\">\n    <h1>Unit conversion utility</h1>\n    <v-text-field\n      v-model=\"wei\"\n      :counter=\"100\"\n      label=\"Wei\"\n      data-vv-name=\"wei\"\n\n      required\n    ></v-text-field>\n    <v-text-field v-model=\"gwei\" :counter=\"100\" label=\"Gwei\" data-vv-name=\"gwei\" required></v-text-field>\n    <v-text-field v-model=\"ether\" :counter=\"100\" label=\"Ether\" data-vv-name=\"ether\" required></v-text-field>\n  </div>\n</template>\n\n<script>\nimport Bignumber from 'bignumber.js'\nBignumber.config({ DECIMAL_PLACES: 80 })\nconst factor = {\n  ether: 18,\n  gwei: 9\n}\nfunction computedGet(v = 0, type){\n  if(!v) {\n    return '0'\n  }\n  const result = new Bignumber(v).dividedBy(new Bignumber(10).pow(factor[type])).toFixed()\n  return result\n}\n\nfunction computedSet(newValue, oldValue, type){\n  if(!newValue) {\n    return '0'\n  }\n  const result = new Bignumber(newValue).times(new Bignumber(10).pow(factor[type]))\n  if(result.isNaN()){\n    return new Bignumber(oldValue).times(new Bignumber(10).pow(factor[type]))\n  }\n  return result.toFixed()\n}\n\nexport default {\n  props: {\n    source: String\n  },\n  data: () => ({\n    v: \"1000000000000000000\",\n  }),\n  computed: {\n    ether: {\n      get: function() {\n        return computedGet(this.v, 'ether')\n      },\n      set: function(newValue) {\n        this.v = computedSet(newValue, this.ether, 'ether')\n      }\n    },\n    gwei: {\n      get: function() {\n        return computedGet(this.v, 'gwei')\n      },\n      set: function(newValue) {\n        this.v = computedSet(newValue, this.ether, 'gwei')\n      }\n    },\n    wei: {\n      get: function() {\n        return this.v \n      },\n      set: function(newValue) {\n        this.v = newValue\n      }\n    }\n  },\n  methods: {\n    enter(e) {\n      console.log(e);\n    }\n  },\n  created() {}\n};\n</script>\n\n<style lang=\"scss\">\n#app {\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n</style>\n","import mod from \"-!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Converter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vuetify-loader/lib/loader.js??ref--18-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Converter.vue?vue&type=script&lang=js&\"","// Styles\nimport \"../../../src/components/VLabel/VLabel.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable';\nimport mixins from '../../util/mixins'; // Helpers\n\nimport { convertToUnit } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(Themeable).extend({\n  name: 'v-label',\n  functional: true,\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    disabled: Boolean,\n    focused: Boolean,\n    for: String,\n    left: {\n      type: [Number, String],\n      default: 0\n    },\n    right: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    value: Boolean\n  },\n\n  render(h, ctx) {\n    const {\n      children,\n      listeners,\n      props\n    } = ctx;\n    const data = {\n      staticClass: 'v-label',\n      class: {\n        'v-label--active': props.value,\n        'v-label--is-disabled': props.disabled,\n        ...functionalThemeClasses(ctx)\n      },\n      attrs: {\n        for: props.for,\n        'aria-hidden': !props.for\n      },\n      on: listeners,\n      style: {\n        left: convertToUnit(props.left),\n        right: convertToUnit(props.right),\n        position: props.absolute ? 'absolute' : 'relative'\n      },\n      ref: 'label'\n    };\n    return h('label', Colorable.options.methods.setTextColor(props.focused && props.color, data), children);\n  }\n\n});\n//# sourceMappingURL=VLabel.js.map","import VLabel from './VLabel';\nexport { VLabel };\nexport default VLabel;\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VMessages/VMessages.sass\"; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport Themeable from '../../mixins/themeable';\nimport mixins from '../../util/mixins'; // Utilities\n\nimport { getSlot } from '../../util/helpers';\n/* @vue/component */\n\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-messages',\n  props: {\n    value: {\n      type: Array,\n      default: () => []\n    }\n  },\n  methods: {\n    genChildren() {\n      return this.$createElement('transition-group', {\n        staticClass: 'v-messages__wrapper',\n        attrs: {\n          name: 'message-transition',\n          tag: 'div'\n        }\n      }, this.value.map(this.genMessage));\n    },\n\n    genMessage(message, key) {\n      return this.$createElement('div', {\n        staticClass: 'v-messages__message',\n        key\n      }, getSlot(this, 'default', {\n        message,\n        key\n      }) || [message]);\n    }\n\n  },\n\n  render(h) {\n    return h('div', this.setTextColor(this.color, {\n      staticClass: 'v-messages',\n      class: this.themeClasses\n    }), [this.genChildren()]);\n  }\n\n});\n//# sourceMappingURL=VMessages.js.map","import VMessages from './VMessages';\nexport { VMessages };\nexport default VMessages;\n//# sourceMappingURL=index.js.map","// Mixins\nimport Colorable from '../colorable';\nimport Themeable from '../themeable';\nimport { inject as RegistrableInject } from '../registrable'; // Utilities\n\nimport { deepEqual } from '../../util/helpers';\nimport { consoleError } from '../../util/console';\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Colorable, RegistrableInject('form'), Themeable).extend({\n  name: 'validatable',\n  props: {\n    disabled: Boolean,\n    error: Boolean,\n    errorCount: {\n      type: [Number, String],\n      default: 1\n    },\n    errorMessages: {\n      type: [String, Array],\n      default: () => []\n    },\n    messages: {\n      type: [String, Array],\n      default: () => []\n    },\n    readonly: Boolean,\n    rules: {\n      type: Array,\n      default: () => []\n    },\n    success: Boolean,\n    successMessages: {\n      type: [String, Array],\n      default: () => []\n    },\n    validateOnBlur: Boolean,\n    value: {\n      required: false\n    }\n  },\n\n  data() {\n    return {\n      errorBucket: [],\n      hasColor: false,\n      hasFocused: false,\n      hasInput: false,\n      isFocused: false,\n      isResetting: false,\n      lazyValue: this.value,\n      valid: false\n    };\n  },\n\n  computed: {\n    computedColor() {\n      if (this.disabled) return undefined;\n      if (this.color) return this.color; // It's assumed that if the input is on a\n      // dark background, the user will want to\n      // have a white color. If the entire app\n      // is setup to be dark, then they will\n      // like want to use their primary color\n\n      if (this.isDark && !this.appIsDark) return 'white';else return 'primary';\n    },\n\n    hasError() {\n      return this.internalErrorMessages.length > 0 || this.errorBucket.length > 0 || this.error;\n    },\n\n    // TODO: Add logic that allows the user to enable based\n    // upon a good validation\n    hasSuccess() {\n      return this.internalSuccessMessages.length > 0 || this.success;\n    },\n\n    externalError() {\n      return this.internalErrorMessages.length > 0 || this.error;\n    },\n\n    hasMessages() {\n      return this.validationTarget.length > 0;\n    },\n\n    hasState() {\n      if (this.disabled) return false;\n      return this.hasSuccess || this.shouldValidate && this.hasError;\n    },\n\n    internalErrorMessages() {\n      return this.genInternalMessages(this.errorMessages);\n    },\n\n    internalMessages() {\n      return this.genInternalMessages(this.messages);\n    },\n\n    internalSuccessMessages() {\n      return this.genInternalMessages(this.successMessages);\n    },\n\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit('input', val);\n      }\n\n    },\n\n    shouldValidate() {\n      if (this.externalError) return true;\n      if (this.isResetting) return false;\n      return this.validateOnBlur ? this.hasFocused && !this.isFocused : this.hasInput || this.hasFocused;\n    },\n\n    validations() {\n      return this.validationTarget.slice(0, Number(this.errorCount));\n    },\n\n    validationState() {\n      if (this.disabled) return undefined;\n      if (this.hasError && this.shouldValidate) return 'error';\n      if (this.hasSuccess) return 'success';\n      if (this.hasColor) return this.computedColor;\n      return undefined;\n    },\n\n    validationTarget() {\n      if (this.internalErrorMessages.length > 0) {\n        return this.internalErrorMessages;\n      } else if (this.successMessages.length > 0) {\n        return this.internalSuccessMessages;\n      } else if (this.messages.length > 0) {\n        return this.internalMessages;\n      } else if (this.shouldValidate) {\n        return this.errorBucket;\n      } else return [];\n    }\n\n  },\n  watch: {\n    rules: {\n      handler(newVal, oldVal) {\n        if (deepEqual(newVal, oldVal)) return;\n        this.validate();\n      },\n\n      deep: true\n    },\n\n    internalValue() {\n      // If it's the first time we're setting input,\n      // mark it with hasInput\n      this.hasInput = true;\n      this.validateOnBlur || this.$nextTick(this.validate);\n    },\n\n    isFocused(val) {\n      // Should not check validation\n      // if disabled\n      if (!val && !this.disabled) {\n        this.hasFocused = true;\n        this.validateOnBlur && this.validate();\n      }\n    },\n\n    isResetting() {\n      setTimeout(() => {\n        this.hasInput = false;\n        this.hasFocused = false;\n        this.isResetting = false;\n        this.validate();\n      }, 0);\n    },\n\n    hasError(val) {\n      if (this.shouldValidate) {\n        this.$emit('update:error', val);\n      }\n    },\n\n    value(val) {\n      this.lazyValue = val;\n    }\n\n  },\n\n  beforeMount() {\n    this.validate();\n  },\n\n  created() {\n    this.form && this.form.register(this);\n  },\n\n  beforeDestroy() {\n    this.form && this.form.unregister(this);\n  },\n\n  methods: {\n    genInternalMessages(messages) {\n      if (!messages) return [];else if (Array.isArray(messages)) return messages;else return [messages];\n    },\n\n    /** @public */\n    reset() {\n      this.isResetting = true;\n      this.internalValue = Array.isArray(this.internalValue) ? [] : undefined;\n    },\n\n    /** @public */\n    resetValidation() {\n      this.isResetting = true;\n    },\n\n    /** @public */\n    validate(force = false, value) {\n      const errorBucket = [];\n      value = value || this.internalValue;\n      if (force) this.hasInput = this.hasFocused = true;\n\n      for (let index = 0; index < this.rules.length; index++) {\n        const rule = this.rules[index];\n        const valid = typeof rule === 'function' ? rule(value) : rule;\n\n        if (typeof valid === 'string') {\n          errorBucket.push(valid);\n        } else if (typeof valid !== 'boolean') {\n          consoleError(`Rules should return a string or boolean, received '${typeof valid}' instead`, this);\n        }\n      }\n\n      this.errorBucket = errorBucket;\n      this.valid = errorBucket.length === 0;\n      return this.valid;\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VInput/VInput.sass\"; // Components\n\nimport VIcon from '../VIcon';\nimport VLabel from '../VLabel';\nimport VMessages from '../VMessages'; // Mixins\n\nimport BindsAttrs from '../../mixins/binds-attrs';\nimport Validatable from '../../mixins/validatable'; // Utilities\n\nimport { convertToUnit, getSlot, kebabCase } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(BindsAttrs, Validatable);\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-input',\n  inheritAttrs: false,\n  props: {\n    appendIcon: String,\n    backgroundColor: {\n      type: String,\n      default: ''\n    },\n    dense: Boolean,\n    height: [Number, String],\n    hideDetails: Boolean,\n    hint: String,\n    id: String,\n    label: String,\n    loading: Boolean,\n    persistentHint: Boolean,\n    prependIcon: String,\n    value: null\n  },\n\n  data() {\n    return {\n      lazyValue: this.value,\n      hasMouseDown: false\n    };\n  },\n\n  computed: {\n    classes() {\n      return {\n        'v-input--has-state': this.hasState,\n        'v-input--hide-details': this.hideDetails,\n        'v-input--is-label-active': this.isLabelActive,\n        'v-input--is-dirty': this.isDirty,\n        'v-input--is-disabled': this.disabled,\n        'v-input--is-focused': this.isFocused,\n        'v-input--is-loading': this.loading !== false && this.loading !== undefined,\n        'v-input--is-readonly': this.readonly,\n        'v-input--dense': this.dense,\n        ...this.themeClasses\n      };\n    },\n\n    computedId() {\n      return this.id || `input-${this._uid}`;\n    },\n\n    hasHint() {\n      return !this.hasMessages && !!this.hint && (this.persistentHint || this.isFocused);\n    },\n\n    hasLabel() {\n      return !!(this.$slots.label || this.label);\n    },\n\n    // Proxy for `lazyValue`\n    // This allows an input\n    // to function without\n    // a provided model\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit(this.$_modelEvent, val);\n      }\n\n    },\n\n    isDirty() {\n      return !!this.lazyValue;\n    },\n\n    isDisabled() {\n      return this.disabled || this.readonly;\n    },\n\n    isLabelActive() {\n      return this.isDirty;\n    }\n\n  },\n  watch: {\n    value(val) {\n      this.lazyValue = val;\n    }\n\n  },\n\n  beforeCreate() {\n    // v-radio-group needs to emit a different event\n    // https://github.com/vuetifyjs/vuetify/issues/4752\n    this.$_modelEvent = this.$options.model && this.$options.model.event || 'input';\n  },\n\n  methods: {\n    genContent() {\n      return [this.genPrependSlot(), this.genControl(), this.genAppendSlot()];\n    },\n\n    genControl() {\n      return this.$createElement('div', {\n        staticClass: 'v-input__control'\n      }, [this.genInputSlot(), this.genMessages()]);\n    },\n\n    genDefaultSlot() {\n      return [this.genLabel(), this.$slots.default];\n    },\n\n    genIcon(type, cb) {\n      const icon = this[`${type}Icon`];\n      const eventName = `click:${kebabCase(type)}`;\n      const data = {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          light: this.light\n        },\n        on: !(this.listeners$[eventName] || cb) ? undefined : {\n          click: e => {\n            e.preventDefault();\n            e.stopPropagation();\n            this.$emit(eventName, e);\n            cb && cb(e);\n          },\n          // Container has g event that will\n          // trigger menu open if enclosed\n          mouseup: e => {\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        }\n      };\n      return this.$createElement('div', {\n        staticClass: `v-input__icon v-input__icon--${kebabCase(type)}`,\n        key: type + icon\n      }, [this.$createElement(VIcon, data, icon)]);\n    },\n\n    genInputSlot() {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor, {\n        staticClass: 'v-input__slot',\n        style: {\n          height: convertToUnit(this.height)\n        },\n        on: {\n          click: this.onClick,\n          mousedown: this.onMouseDown,\n          mouseup: this.onMouseUp\n        },\n        ref: 'input-slot'\n      }), [this.genDefaultSlot()]);\n    },\n\n    genLabel() {\n      if (!this.hasLabel) return null;\n      return this.$createElement(VLabel, {\n        props: {\n          color: this.validationState,\n          dark: this.dark,\n          focused: this.hasState,\n          for: this.computedId,\n          light: this.light\n        }\n      }, this.$slots.label || this.label);\n    },\n\n    genMessages() {\n      if (this.hideDetails) return null;\n      const messages = this.hasHint ? [this.hint] : this.validations;\n      return this.$createElement(VMessages, {\n        props: {\n          color: this.hasHint ? '' : this.validationState,\n          dark: this.dark,\n          light: this.light,\n          value: this.hasMessages || this.hasHint ? messages : []\n        },\n        attrs: {\n          role: this.hasMessages ? 'alert' : null\n        },\n        scopedSlots: {\n          default: props => getSlot(this, 'message', props)\n        }\n      });\n    },\n\n    genSlot(type, location, slot) {\n      if (!slot.length) return null;\n      const ref = `${type}-${location}`;\n      return this.$createElement('div', {\n        staticClass: `v-input__${ref}`,\n        ref\n      }, slot);\n    },\n\n    genPrependSlot() {\n      const slot = [];\n\n      if (this.$slots.prepend) {\n        slot.push(this.$slots.prepend);\n      } else if (this.prependIcon) {\n        slot.push(this.genIcon('prepend'));\n      }\n\n      return this.genSlot('prepend', 'outer', slot);\n    },\n\n    genAppendSlot() {\n      const slot = []; // Append icon for text field was really\n      // an appended inner icon, v-text-field\n      // will overwrite this method in order to obtain\n      // backwards compat\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n\n    onClick(e) {\n      this.$emit('click', e);\n    },\n\n    onMouseDown(e) {\n      this.hasMouseDown = true;\n      this.$emit('mousedown', e);\n    },\n\n    onMouseUp(e) {\n      this.hasMouseDown = false;\n      this.$emit('mouseup', e);\n    }\n\n  },\n\n  render(h) {\n    return h('div', this.setTextColor(this.validationState, {\n      staticClass: 'v-input',\n      class: this.classes\n    }), this.genContent());\n  }\n\n});\n//# sourceMappingURL=VInput.js.map","import VInput from './VInput';\nexport { VInput };\nexport default VInput;\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VCounter/VCounter.sass\"; // Mixins\n\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable';\nimport mixins from '../../util/mixins';\n/* @vue/component */\n\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n  functional: true,\n  props: {\n    value: {\n      type: [Number, String],\n      default: ''\n    },\n    max: [Number, String]\n  },\n\n  render(h, ctx) {\n    const {\n      props\n    } = ctx;\n    const max = parseInt(props.max, 10);\n    const value = parseInt(props.value, 10);\n    const content = max ? `${value} / ${max}` : String(props.value);\n    const isGreater = max && value > max;\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx)\n      }\n    }, content);\n  }\n\n});\n//# sourceMappingURL=VCounter.js.map","import VCounter from './VCounter';\nexport { VCounter };\nexport default VCounter;\n//# sourceMappingURL=index.js.map","// Directives\nimport Intersect from '../../directives/intersect'; // Utilities\n\nimport { consoleWarn } from '../../util/console'; // Types\n\nimport Vue from 'vue';\nexport default function intersectable(options) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({\n      name: 'intersectable'\n    });\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted() {\n      Intersect.inserted(this.$el, {\n        name: 'intersect',\n        value: {\n          handler: this.onObserve\n        }\n      });\n    },\n\n    destroyed() {\n      Intersect.unbind(this.$el);\n    },\n\n    methods: {\n      onObserve(entries, observer, isIntersecting) {\n        if (!isIntersecting) return;\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = this[options.onVisible[i]];\n\n          if (typeof callback === 'function') {\n            callback();\n            continue;\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options');\n        }\n      }\n\n    }\n  });\n}\n//# sourceMappingURL=index.js.map","import \"../../../src/components/VProgressLinear/VProgressLinear.sass\"; // Components\n\nimport { VFadeTransition, VSlideXTransition } from '../transitions'; // Mixins\n\nimport Colorable from '../../mixins/colorable';\nimport { factory as PositionableFactory } from '../../mixins/positionable';\nimport Proxyable from '../../mixins/proxyable';\nimport Themeable from '../../mixins/themeable'; // Utilities\n\nimport { convertToUnit, getSlot } from '../../util/helpers';\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(Colorable, PositionableFactory(['absolute', 'fixed', 'top', 'bottom']), Proxyable, Themeable);\n/* @vue/component */\n\nexport default baseMixins.extend({\n  name: 'v-progress-linear',\n  props: {\n    active: {\n      type: Boolean,\n      default: true\n    },\n    backgroundColor: {\n      type: String,\n      default: null\n    },\n    backgroundOpacity: {\n      type: [Number, String],\n      default: null\n    },\n    bufferValue: {\n      type: [Number, String],\n      default: 100\n    },\n    color: {\n      type: String,\n      default: 'primary'\n    },\n    height: {\n      type: [Number, String],\n      default: 4\n    },\n    indeterminate: Boolean,\n    query: Boolean,\n    rounded: Boolean,\n    stream: Boolean,\n    striped: Boolean,\n    value: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      internalLazyValue: this.value || 0\n    };\n  },\n\n  computed: {\n    __cachedBackground() {\n      return this.$createElement('div', this.setBackgroundColor(this.backgroundColor || this.color, {\n        staticClass: 'v-progress-linear__background',\n        style: this.backgroundStyle\n      }));\n    },\n\n    __cachedBar() {\n      return this.$createElement(this.computedTransition, [this.__cachedBarType]);\n    },\n\n    __cachedBarType() {\n      return this.indeterminate ? this.__cachedIndeterminate : this.__cachedDeterminate;\n    },\n\n    __cachedBuffer() {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__buffer',\n        style: this.styles\n      });\n    },\n\n    __cachedDeterminate() {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: `v-progress-linear__determinate`,\n        style: {\n          width: convertToUnit(this.normalizedValue, '%')\n        }\n      }));\n    },\n\n    __cachedIndeterminate() {\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          'v-progress-linear__indeterminate--active': this.active\n        }\n      }, [this.genProgressBar('long'), this.genProgressBar('short')]);\n    },\n\n    __cachedStream() {\n      if (!this.stream) return null;\n      return this.$createElement('div', this.setTextColor(this.color, {\n        staticClass: 'v-progress-linear__stream',\n        style: {\n          width: convertToUnit(100 - this.normalizedBuffer, '%')\n        }\n      }));\n    },\n\n    backgroundStyle() {\n      const backgroundOpacity = this.backgroundOpacity == null ? this.backgroundColor ? 1 : 0.3 : parseFloat(this.backgroundOpacity);\n      return {\n        opacity: backgroundOpacity,\n        [this.$vuetify.rtl ? 'right' : 'left']: convertToUnit(this.normalizedValue, '%'),\n        width: convertToUnit(this.normalizedBuffer - this.normalizedValue, '%')\n      };\n    },\n\n    classes() {\n      return {\n        'v-progress-linear--absolute': this.absolute,\n        'v-progress-linear--fixed': this.fixed,\n        'v-progress-linear--query': this.query,\n        'v-progress-linear--reactive': this.reactive,\n        'v-progress-linear--rounded': this.rounded,\n        'v-progress-linear--striped': this.striped,\n        ...this.themeClasses\n      };\n    },\n\n    computedTransition() {\n      return this.indeterminate ? VFadeTransition : VSlideXTransition;\n    },\n\n    normalizedBuffer() {\n      return this.normalize(this.bufferValue);\n    },\n\n    normalizedValue() {\n      return this.normalize(this.internalLazyValue);\n    },\n\n    reactive() {\n      return Boolean(this.$listeners.change);\n    },\n\n    styles() {\n      const styles = {};\n\n      if (!this.active) {\n        styles.height = 0;\n      }\n\n      if (!this.indeterminate && parseFloat(this.normalizedBuffer) !== 100) {\n        styles.width = convertToUnit(this.normalizedBuffer, '%');\n      }\n\n      return styles;\n    }\n\n  },\n  methods: {\n    genContent() {\n      const slot = getSlot(this, 'default', {\n        value: this.internalLazyValue\n      });\n      if (!slot) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-progress-linear__content'\n      }, slot);\n    },\n\n    genListeners() {\n      const listeners = this.$listeners;\n\n      if (this.reactive) {\n        listeners.click = this.onClick;\n      }\n\n      return listeners;\n    },\n\n    genProgressBar(name) {\n      return this.$createElement('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-progress-linear__indeterminate',\n        class: {\n          [name]: true\n        }\n      }));\n    },\n\n    onClick(e) {\n      if (!this.reactive) return;\n      const {\n        width\n      } = this.$el.getBoundingClientRect();\n      this.internalValue = e.offsetX / width * 100;\n    },\n\n    normalize(value) {\n      if (value < 0) return 0;\n      if (value > 100) return 100;\n      return parseFloat(value);\n    }\n\n  },\n\n  render(h) {\n    const data = {\n      staticClass: 'v-progress-linear',\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': 0,\n        'aria-valuemax': this.normalizedBuffer,\n        'aria-valuenow': this.indeterminate ? undefined : this.normalizedValue\n      },\n      class: this.classes,\n      style: {\n        bottom: this.bottom ? 0 : undefined,\n        height: this.active ? convertToUnit(this.height) : 0,\n        top: this.top ? 0 : undefined\n      },\n      on: this.genListeners()\n    };\n    return h('div', data, [this.__cachedStream, this.__cachedBackground, this.__cachedBuffer, this.__cachedBar, this.genContent()]);\n  }\n\n});\n//# sourceMappingURL=VProgressLinear.js.map","import VProgressLinear from './VProgressLinear';\nexport { VProgressLinear };\nexport default VProgressLinear;\n//# sourceMappingURL=index.js.map","import Vue from 'vue';\nimport VProgressLinear from '../../components/VProgressLinear';\n/**\n * Loadable\n *\n * @mixin\n *\n * Used to add linear progress bar to components\n * Can use a default bar with a specific color\n * or designate a custom progress linear bar\n */\n\n/* @vue/component */\n\nexport default Vue.extend().extend({\n  name: 'loadable',\n  props: {\n    loading: {\n      type: [Boolean, String],\n      default: false\n    },\n    loaderHeight: {\n      type: [Number, String],\n      default: 2\n    }\n  },\n  methods: {\n    genProgress() {\n      if (this.loading === false) return null;\n      return this.$slots.progress || this.$createElement(VProgressLinear, {\n        props: {\n          absolute: true,\n          color: this.loading === true || this.loading === '' ? this.color || 'primary' : this.loading,\n          height: this.loaderHeight,\n          indeterminate: true\n        }\n      });\n    }\n\n  }\n});\n//# sourceMappingURL=index.js.map","// Styles\nimport \"../../../src/components/VTextField/VTextField.sass\"; // Extensions\n\nimport VInput from '../VInput'; // Components\n\nimport VCounter from '../VCounter';\nimport VLabel from '../VLabel'; // Mixins\n\nimport Intersectable from '../../mixins/intersectable';\nimport Loadable from '../../mixins/loadable'; // Directives\n\nimport ripple from '../../directives/ripple'; // Utilities\n\nimport { convertToUnit, keyCodes } from '../../util/helpers';\nimport { breaking, consoleWarn } from '../../util/console'; // Types\n\nimport mixins from '../../util/mixins';\nconst baseMixins = mixins(VInput, Intersectable({\n  onVisible: ['setLabelWidth', 'setPrefixWidth', 'setPrependWidth']\n}), Loadable);\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\n/* @vue/component */\n\nexport default baseMixins.extend().extend({\n  name: 'v-text-field',\n  directives: {\n    ripple\n  },\n  inheritAttrs: false,\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear'\n    },\n    counter: [Boolean, Number, String],\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false\n  }),\n  computed: {\n    classes() {\n      return { ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped\n      };\n    },\n\n    counterValue() {\n      return (this.internalValue || '').toString().length;\n    },\n\n    internalValue: {\n      get() {\n        return this.lazyValue;\n      },\n\n      set(val) {\n        this.lazyValue = val;\n        this.$emit('input', this.lazyValue);\n      }\n\n    },\n\n    isDirty() {\n      return this.lazyValue != null && this.lazyValue.toString().length > 0 || this.badInput;\n    },\n\n    isEnclosed() {\n      return this.filled || this.isSolo || this.outlined || this.fullWidth;\n    },\n\n    isLabelActive() {\n      return this.isDirty || dirtyTypes.includes(this.type);\n    },\n\n    isSingle() {\n      return this.isSolo || this.singleLine || this.fullWidth;\n    },\n\n    isSolo() {\n      return this.solo || this.soloInverted;\n    },\n\n    labelPosition() {\n      let offset = this.prefix && !this.labelValue ? this.prefixWidth : 0;\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth;\n      return this.$vuetify.rtl === this.reverse ? {\n        left: offset,\n        right: 'auto'\n      } : {\n        left: 'auto',\n        right: offset\n      };\n    },\n\n    showLabel() {\n      return this.hasLabel && (!this.isSingle || !this.isLabelActive && !this.placeholder);\n    },\n\n    labelValue() {\n      return !this.isSingle && Boolean(this.isFocused || this.isLabelActive || this.placeholder);\n    }\n\n  },\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n\n    label() {\n      this.$nextTick(this.setLabelWidth);\n    },\n\n    prefix() {\n      this.$nextTick(this.setPrefixWidth);\n    },\n\n    isFocused(val) {\n      // Sets validationState from validatable\n      this.hasColor = val;\n\n      if (val) {\n        this.initialValue = this.lazyValue;\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue);\n      }\n    },\n\n    value(val) {\n      this.lazyValue = val;\n    }\n\n  },\n\n  created() {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this);\n    }\n    /* istanbul ignore next */\n\n\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this);\n    }\n    /* istanbul ignore if */\n\n\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this);\n    }\n  },\n\n  mounted() {\n    this.autofocus && this.onFocus();\n    this.setLabelWidth();\n    this.setPrefixWidth();\n    this.setPrependWidth();\n    requestAnimationFrame(() => this.isBooted = true);\n  },\n\n  methods: {\n    /** @public */\n    focus() {\n      this.onFocus();\n    },\n\n    /** @public */\n    blur(e) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur();\n      });\n    },\n\n    clearableCallback() {\n      this.$refs.input && this.$refs.input.focus();\n      this.$nextTick(() => this.internalValue = null);\n    },\n\n    genAppendSlot() {\n      const slot = [];\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer']);\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'));\n      }\n\n      return this.genSlot('append', 'outer', slot);\n    },\n\n    genPrependInnerSlot() {\n      const slot = [];\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner']);\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'));\n      }\n\n      return this.genSlot('prepend', 'inner', slot);\n    },\n\n    genIconSlot() {\n      const slot = [];\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append']);\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'));\n      }\n\n      return this.genSlot('append', 'inner', slot);\n    },\n\n    genInputSlot() {\n      const input = VInput.options.methods.genInputSlot.call(this);\n      const prepend = this.genPrependInnerSlot();\n\n      if (prepend) {\n        input.children = input.children || [];\n        input.children.unshift(prepend);\n      }\n\n      return input;\n    },\n\n    genClearIcon() {\n      if (!this.clearable) return null;\n      const icon = this.isDirty ? 'clear' : '';\n      return this.genSlot('append', 'inner', [this.genIcon(icon, this.clearableCallback)]);\n    },\n\n    genCounter() {\n      if (this.counter === false || this.counter == null) return null;\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter;\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.counterValue\n        }\n      });\n    },\n\n    genDefaultSlot() {\n      return [this.genFieldset(), this.genTextFieldSlot(), this.genClearIcon(), this.genIconSlot(), this.genProgress()];\n    },\n\n    genFieldset() {\n      if (!this.outlined) return null;\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true\n        }\n      }, [this.genLegend()]);\n    },\n\n    genLabel() {\n      if (!this.showLabel) return null;\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.disabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue\n        }\n      };\n      return this.$createElement(VLabel, data, this.$slots.label || this.label);\n    },\n\n    genLegend() {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0;\n      const span = this.$createElement('span', {\n        domProps: {\n          innerHTML: '&#8203;'\n        }\n      });\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined\n        }\n      }, [span]);\n    },\n\n    genInput() {\n      const listeners = Object.assign({}, this.listeners$);\n      delete listeners['change']; // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: this.lazyValue\n        },\n        attrs: { ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.disabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.readonly,\n          type: this.type\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown\n        }),\n        ref: 'input'\n      });\n    },\n\n    genMessages() {\n      if (this.hideDetails) return null;\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details'\n      }, [VInput.options.methods.genMessages.call(this), this.genCounter()]);\n    },\n\n    genTextFieldSlot() {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot'\n      }, [this.genLabel(), this.prefix ? this.genAffix('prefix') : null, this.genInput(), this.suffix ? this.genAffix('suffix') : null]);\n    },\n\n    genAffix(type) {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type\n      }, this[type]);\n    },\n\n    onBlur(e) {\n      this.isFocused = false;\n      e && this.$nextTick(() => this.$emit('blur', e));\n    },\n\n    onClick() {\n      if (this.isFocused || this.disabled || !this.$refs.input) return;\n      this.$refs.input.focus();\n    },\n\n    onFocus(e) {\n      if (!this.$refs.input) return;\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus();\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true;\n        e && this.$emit('focus', e);\n      }\n    },\n\n    onInput(e) {\n      const target = e.target;\n      this.internalValue = target.value;\n      this.badInput = target.validity && target.validity.badInput;\n    },\n\n    onKeyDown(e) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue);\n      this.$emit('keydown', e);\n    },\n\n    onMouseDown(e) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e);\n    },\n\n    onMouseUp(e) {\n      if (this.hasMouseDown) this.focus();\n      VInput.options.methods.onMouseUp.call(this, e);\n    },\n\n    setLabelWidth() {\n      if (!this.outlined || !this.$refs.label) return;\n      this.labelWidth = this.$refs.label.scrollWidth * 0.75 + 6;\n    },\n\n    setPrefixWidth() {\n      if (!this.$refs.prefix) return;\n      this.prefixWidth = this.$refs.prefix.offsetWidth;\n    },\n\n    setPrependWidth() {\n      if (!this.outlined || !this.$refs['prepend-inner']) return;\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth;\n    }\n\n  }\n});\n//# sourceMappingURL=VTextField.js.map","import { render, staticRenderFns } from \"./Converter.vue?vue&type=template&id=089ee719&\"\nimport script from \"./Converter.vue?vue&type=script&lang=js&\"\nexport * from \"./Converter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Converter.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VTextField } from 'vuetify/lib/components/VTextField';\ninstallComponents(component, {VTextField})\n"],"sourceRoot":""}